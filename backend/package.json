{
  "name": "dex-backend-serverless",
  "version": "1.0.0",
  "description": "DEX Backend - Serverless Cloudflare Workers",
  "main": "src/index.ts",
  "scripts": {
    "build": "echo 'No build needed for Cloudflare Workers'",
    "deploy": "wrangler deploy",
    "dev": "wrangler dev",
    "development": "wrangler deploy --env development",
    "start": "wrangler dev",
    "test": "npm run test:all",
    "test:all": "tsx all-in-one-test.ts",
    "test:all:coverage": "tsx all-in-one-test.ts --coverage",
    "test:unit": "vitest run test/*.spec.ts --exclude test/integration.spec.ts test/performance.spec.ts test/security.spec.ts",
    "test:integration": "vitest run test/integration.spec.ts",
    "test:performance": "vitest run test/performance.spec.ts",
    "test:security": "vitest run test/security.spec.ts",
    "test:watch": "vitest watch",
    "test:coverage": "vitest run --coverage",
    "test:coverage:watch": "vitest watch --coverage",
    "coverage:open": "npx live-server coverage/lcov-report --port=8080",
    "cf-typegen": "wrangler types",
    "generate": "drizzle-kit generate",
    "push": "drizzle-kit push",
    "migrate": "drizzle-kit migrate",
    "migrate:local": "wrangler d1 migrations apply d1-dex-database --local",
    "migrate:prod": "wrangler d1 migrations apply d1-dex-database",
    "studio": "drizzle-kit studio",
    "studio:local": "cross-env LOCAL_DB_PATH=$(find .wrangler/state/v3/d1/miniflare-D1DatabaseObject -type f -name '*.sqlite' -print -quit) drizzle-kit studio",
    "db:create": "wrangler d1 create d1-dex-database",
    "db:setup": "./setup-database.sh",
    "db:init": "npx tsx scripts/init-database.ts",
    "db:seed": "wrangler d1 execute d1-dex-database --local --file=./scripts/init-db.sql",
    "db:query": "wrangler d1 execute d1-dex-database --local",
    "db:migration:prod": "wrangler d1 execute d1-dex-database --remote --file drizzle/0000_stale_infant_terrible.sql",
    "db:query:prod": "wrangler d1 execute d1-dex-database --command \"SELECT name FROM sqlite_master WHERE type='table';\"",
    "db:backup": "wrangler d1 export d1-dex-database --output=backup.sql",
    "db:reset": "wrangler d1 execute d1-dex-database --local --command='DROP SCHEMA IF EXISTS main CASCADE; CREATE SCHEMA main;'",
    "verify": "./scripts/verify-config.sh",
    "setup": "cp wrangler.example.toml wrangler.toml && echo 'Please edit wrangler.toml with your configuration'"
  },
  "keywords": [
    "cloudflare",
    "workers",
    "serverless",
    "dex",
    "ai",
    "database",
    "storage"
  ],
  "author": "EntySquare Protocol Team",
  "license": "MIT",
  "devDependencies": {
    "@cloudflare/vitest-pool-workers": "^0.8.47",
    "@cloudflare/workers-types": "^4.20250701.0",
    "@types/node": "^24.0.8",
    "@vitest/coverage-v8": "^3.2.4",
    "drizzle-kit": "^0.31.4",
    "tsx": "^4.20.3",
    "typescript": "^5.7.2",
    "vitest": "^3.2.4",
    "wrangler": "^4.24.0"
  },
  "dependencies": {
    "@cloudflare/containers": "^0.0.16",
    "@hono/zod-validator": "^0.7.0",
    "nanoid": "^5.1.5",
    "better-sqlite3": "^12.2.0",
    "cross-env": "^7.0.3",
    "drizzle-orm": "^0.44.2",
    "hono": "^4.8.3",
    "viem": "^2.31.6",
    "@modelcontextprotocol/sdk": "^1.13.2",
    "agents": "^0.0.100",
    "zod": "^3.25.67"
  }
}
