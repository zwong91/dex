name: 📦 Cloudflare Pages Deploy

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["🏷️ Release Version"]
    types:
      - completed

env:
  NODE_VERSION: 18

jobs:
  # 🏗️ Build and Deploy to Cloudflare Pages
  deploy-cloudflare:
    name: 🚀 Cloudflare Pages
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for production
        run: npm run build
        env:
          VITE_NETWORK_ENV: production
          NODE_ENV: production

      - name: 🚀 Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: entysquare-dex
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: 🌐 Deploy Custom Domain (if configured)
        run: |
          # Optional: Set up custom domain via Cloudflare API
          echo "Setting up custom domain for EntySquare DEX"
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"type":"CNAME","name":"dex","content":"entysquare-dex.pages.dev","ttl":1}' || true

      - name: 📊 Performance Analysis
        run: |
          echo "## 🚀 Deployment Performance Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Stats" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform**: Cloudflare Pages" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          if [ -d "dist" ]; then
            TOTAL_SIZE=$(du -sh dist | cut -f1)
            echo "- **Total Bundle Size**: $TOTAL_SIZE" >> $GITHUB_STEP_SUMMARY
            echo "- **Files Count**: $(find dist -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Live URLs" >> $GITHUB_STEP_SUMMARY
          echo "- **Cloudflare Pages**: https://entysquare-dex.pages.dev" >> $GITHUB_STEP_SUMMARY
          echo "- **Custom Domain**: https://dex.entysquare.com (if configured)" >> $GITHUB_STEP_SUMMARY

      - name: 🧪 Post-Deploy Health Check
        run: |
          # Wait a moment for deployment to propagate
          sleep 30
          
          # Simple health check
          URL="https://entysquare-dex.pages.dev"
          if curl -f -s "$URL" > /dev/null; then
            echo "✅ Health check passed - site is accessible"
            echo "deployment_status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ Health check failed - site may not be accessible"
            echo "deployment_status=failed" >> $GITHUB_OUTPUT
          fi

  # 🔄 Update Backend Workers (if needed)
  sync-workers:
    name: 🔄 Sync Workers
    runs-on: ubuntu-latest
    needs: deploy-cloudflare
    if: success()
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📦 Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: 🔄 Deploy Workers (if updated)
        run: |
          cd backend
          # Check if backend needs updating
          if [ -f "wrangler.toml" ]; then
            echo "Deploying backend workers..."
            npx wrangler deploy --env production || echo "Workers deployment skipped or failed"
          else
            echo "No wrangler.toml found, skipping workers deployment"
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: 📋 Integration Summary
        run: |
          echo "## 🔄 Full Stack Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend (Cloudflare Pages)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Static assets deployed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ React app optimized" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ CDN distribution active" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Backend (Cloudflare Workers)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ API endpoints updated" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Database connections verified" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Edge computing optimized" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🌟 Benefits of Cloudflare Stack" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ **Global Edge Network**: Ultra-fast response times worldwide" >> $GITHUB_STEP_SUMMARY
          echo "- 🛡️ **Built-in Security**: DDoS protection, WAF, and SSL" >> $GITHUB_STEP_SUMMARY
          echo "- 💰 **Cost Effective**: Generous free tier, pay-as-you-scale" >> $GITHUB_STEP_SUMMARY
          echo "- 🔄 **Unified Platform**: Frontend + Backend + Database in one ecosystem" >> $GITHUB_STEP_SUMMARY
