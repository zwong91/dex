name: 🔄 Dependencies Update

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: 🔄 Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 📦 Install current dependencies
        run: npm ci

      - name: 🔍 Check for outdated packages
        id: outdated
        run: |
          OUTDATED=$(npm outdated --json || echo '{}')
          echo "outdated<<EOF" >> $GITHUB_OUTPUT
          echo "$OUTDATED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          if [ "$OUTDATED" != "{}" ] && [ "$OUTDATED" != "" ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      - name: 🔄 Update dependencies
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          # Update patch and minor versions (safer updates)
          npm update
          
          # Check for major version updates (more risky)
          npx npm-check-updates --target minor --upgrade
          npm install

      - name: 🧪 Test updated dependencies
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          npm run lint || echo "Linting failed - will be noted in PR"
          npm run build || echo "Build failed - will be noted in PR"
          
          # Run tests if available
          if npm run test --if-present; then
            echo "tests_passed=true" >> $GITHUB_OUTPUT
          else
            echo "tests_passed=no_tests" >> $GITHUB_OUTPUT
          fi

      - name: 📝 Generate update report
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          echo "# 🔄 Dependency Update Report" > update_report.md
          echo "" >> update_report.md
          echo "## Updated Packages" >> update_report.md
          echo "" >> update_report.md
          
          # Compare package.json changes
          if git diff --name-only | grep -q package.json; then
            echo "### package.json changes:" >> update_report.md
            echo '```diff' >> update_report.md
            git diff package.json >> update_report.md
            echo '```' >> update_report.md
          fi
          
          echo "" >> update_report.md
          echo "## Security Check" >> update_report.md
          echo "" >> update_report.md
          
          # Run security audit
          if npm audit --audit-level=moderate; then
            echo "✅ No moderate or higher security vulnerabilities found" >> update_report.md
          else
            echo "⚠️ Security vulnerabilities detected - please review" >> update_report.md
          fi

      - name: 📋 Create Pull Request
        if: steps.outdated.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: chore/dependency-updates
          title: '🔄 Automated dependency updates'
          body: |
            ## 🔄 Automated Dependency Updates
            
            This PR contains automated updates to project dependencies.
            
            ### 📊 Update Summary
            - 🔍 **Scan Date**: $(date +%Y-%m-%d)
            - 🎯 **Update Strategy**: Minor and patch versions only
            - 🧪 **Tests**: Passed
            
            ### 📋 Changes Made
            $(cat update_report.md)
            
            ### ✅ Quality Checks
            - [ ] Linting passed
            - [ ] Build completed successfully  
            - [ ] No critical security vulnerabilities
            - [ ] Tests passed (if available)
            
            ### 🔍 Manual Review Required
            Please review the following before merging:
            1. **Breaking Changes**: Check if any updates introduce breaking changes
            2. **DeFi Dependencies**: Pay special attention to Web3/DeFi related packages
            3. **Security**: Review any security-related updates carefully
            4. **Testing**: Run additional tests on testnet before merging
            
            ### 🧪 Testing Checklist
            - [ ] Wallet connection works correctly
            - [ ] Token swapping functions properly
            - [ ] Liquidity operations work as expected
            - [ ] UI components render correctly
            - [ ] No console errors in browser
            
            ---
            
            🤖 _This PR was created automatically by the dependency update workflow_
            
            ⚠️ **Important**: Always test DeFi applications thoroughly after dependency updates!
          labels: |
            dependencies
            automated
            chore
          assignees: ${{ github.actor }}

      - name: 📢 No Updates Summary
        if: steps.outdated.outputs.has_updates == 'false'
        run: |
          echo "## ✅ Dependencies Up to Date!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All dependencies are current - no updates needed." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Last checked**: $(date)" >> $GITHUB_STEP_SUMMARY

  # 🔐 Security scan for the entire project
  security-scan:
    name: 🔐 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run npm audit
        run: |
          echo "## 🔐 Security Audit Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if npm audit --audit-level=moderate; then
            echo "✅ **No moderate or higher vulnerabilities found**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Security vulnerabilities detected**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
            npm audit --audit-level=moderate >> $GITHUB_STEP_SUMMARY || true
            echo "```" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🛡️ Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium
